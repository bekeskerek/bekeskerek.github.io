var paralax_module = angular.module("paralax", []); paralax_module.directive("paralaxTrack", ["$rootScope", "$timeout", function (e, l) { function a(e, a, o) { function i() { var o = a[0], i = o.getBoundingClientRect(), m = window.innerHeight, u = angular.copy(b); b.top = i.top, b.topPercent = i.top / m * 100, b.bottom = i.bottom, b.bottomPercent = i.bottom / m * 100, b.isIn = b.topPercent >= 0 && b.topPercent < 100 || b.bottomPercent >= 0 && b.bottomPercent < 100 || b.topPercent <= 0 && b.bottomPercent > 100, b.middle = i.top + (i.bottom - i.top) / 2, b.middlePercent = b.middle / m * 100, b.inPercent = i.bottom / (m + i.height) * 100, b.height = o.clientHeight, b.isIn ? r() : a.hasClass(n.paralaxIn) && d(), s(b), angular.equals(u, b) || (e.$broadcast(t.change, b), l(function () { angular.copy(b, e.paralax) })) } function r() { d(), b.isIn && (a.addClass(n.paralaxIn), a.addClass(n.paralaxIn + "-" + (0 | b.inPercent))), b.topPercent > 0 && b.topPercent < 100 && (a.addClass(n.paralaxTopIn), a.addClass(n.paralaxTopIn + "-" + (0 | b.topPercent))), b.bottomPercent > 0 && b.bottomPercent < 100 && (a.addClass(n.paralaxBottomIn), a.addClass(n.paralaxBottomIn + "-" + (0 | b.bottomPercent))) } function d() { var e, l, t, o = a[0]; for (e = o.className.split(" "), t = e.length - 1; t >= 0; t--)l = e[t], 0 !== l.indexOf(n.paralaxIn) && 0 !== l.indexOf(n.paralaxTopIn) && 0 !== l.indexOf(n.paralaxBottomIn) || e.splice(t, 1); o.className = e.join(" ") } function s(e) { a[0].querySelectorAll("[paralax-layer]").forEach(function (l) { var a, n = parseInt(l.getAttribute("paralax-layer")) / 100, t = 0, o = l.getAttribute("paralax-size"), i = l.getAttribute("paralax-offset"); "window" == o && (l.style.height = window.innerHeight + "px"), i && ("%" == i.charAt(i.length - 1) ? t = parseFloat(i) / 100 : "x" == i.charAt(i.length - 1) && (t = parseFloat(i) / window.innerHeight)), a = (window.innerHeight - e.height) * t, l.style.transform = "translate3d(0px, " + ((e.top - a) * n + "px") + ", 0px)" }) } function m() { c && (c = !1, i()), p(m) } function u(e) { c = !0 } a.addClass("paralaxTrack"); var c = !1, p = window.requestAnimFrame = function () { return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (e, l) { window.setTimeout(e, 1e3 / 60) } }(), b = {}; p(m), window.addEventListener ? window.addEventListener("scroll", u, !1) : el.attachEvent && window.attachEvent("onscroll", u) } var n = { paralaxIn: "px-in", paralaxTopIn: "px-top-in", paralaxBottomIn: "px-bottom-in" }, t = { change: "paralaxChange" }; return { restrict: "A", link: a, scope: !0, controller: ["$scope", function (l) { e.paralax = e.paralax || { move: function (e, l) { var a = document.getElementById(l), n = a.getBoundingClientRect(); window.scrollTo(0, n.top) } } }] } }]); var module = angular.module("app-module", ["paralax"]); module.controller("mainCtrl", ["$scope", function (e) { function l(e) { "en" == e ? window.location.pathname = "/" : window.location.pathname = "/" + e } e.model = { langs: [{ id: "en", label: "EN", rel: "/" }, { id: "hu", label: "HU", rel: "/hu" }, { id: "ro", label: "RO", rel: "/ro" }, { id: "ru", label: "RU", rel: "/ru" }, { id: "sk", label: "SK", rel: "/sk" }], lang: null }; var a = document.querySelector("html").getAttribute("lang"); e.model.lang = e.model.langs.filter(function (e) { return e.id == a })[0], e.changeLang = function (e) { l(e) } }]), module.directive("app", [function () { function e(e, l, a) { l.addClass("app") } return { restrict: "A", link: e, scope: !1, controller: ["$scope", function (e) { }] } }]), module.directive("spoke", ["$compile", function (e) { function l(l, a, n) { function t() { l.canvas.width = a[0].offsetWidth, l.canvas.height = a[0].offsetHeight, l.draw(), angular.element(document.querySelector(".inputs")).css({ position: "absolute", bottom: "30px", left: "50px", color: "rgba(255,255,255,0.7)", "font-family": "'Roboto Slab',serif" }), a.find("input").css({ "background-color": "rgba(0,0,0,0)", border: "1px solid currentColor", width: "50px", "text-align": "center" }), a.find("select").css({ "background-color": "#054f79", border: "1px solid currentColor", width: "90px", "text-align": "center" }), a.find("select option").css({ color: "black" }) } a.addClass("spoke"), a.css({ width: "100%", height: "350px" }), a.html('<canvas id="spoke-' + l.$id + '" class="canvas"></canvas>       <span class="title">www.bekeskerek.com</span>   <div class="inputs"> <label class="l l2" ng-show="spoke.a != 0">L: <input ng-model="spoke.l2" ng-change="draw()" type="number" min="40" max="1000">&nbsp;mm&nbsp;&nbsp;&nbsp;</label> <label class="l l1" ng-show="spoke.a == 0">L: <input ng-model="spoke.l1" ng-change="draw()" type="number" min="40" max="1000">&nbsp;mm&nbsp;&nbsp;&nbsp;</label> <label class="d">D1: <select name="d0" id="d0" ng-model="spoke.d0" ng-change="d_change()" ng-options="o.value as o.label for o in dir.d0_list"></select>&nbsp;&nbsp;&nbsp;</label> <label class="b" >D2: <select name="d1" id="d1" ng-model="spoke.d1" ng-change="d_change()" ng-options="o.value as o.label for o in dir.d1_list"></select>&nbsp;&nbsp;&nbsp;</label> <label class="a">A: <input ng-model="spoke.a" ng-change="draw()" type="number" min="0" max="120">&nbsp;Â°&nbsp;&nbsp;&nbsp;</label> <label class="b" ng-show="spoke.a!=0">B: <input ng-model="spoke.n" ng-change="draw()" type="number" min="3" max="30">&nbsp;mm</label> <br> <br> <label for="nut">{{dir.nutLabel}}: <select name="d1" id="d1" ng-model="spoke.nut" ng-change="draw()" ng-options="o.value as o.label for o in dir.nut_list"></select>&nbsp;&nbsp;&nbsp;</label> </label> </div>    '), e(a.contents())(l), l.canvas = a.find("canvas")[0], l.$on("$destroy", function () { angular.element(window).off("resize", t) }), angular.element(window).on("resize", t), t() } return { restrict: "A", link: l, scope: { nutLabel: "@" }, controller: ["$scope", function (e) { function l() { var e = document.createElement("div"); e.style.width = "1in", document.body.appendChild(e); var l = e.offsetWidth; return document.body.removeChild(e), l } function a(e, a) { function i(e, l, a, n) { var i, e, l, r, d, s, m, u, c, p, b, h, v, g, f = 3.8, w = {}, y = a.t / 2 * f / (a.tn + 1); for ("d1" == a.thread && (l += x), T.moveTo(e, l), T.lineWidth = 1, i = 1; i < 2 * a.tn + 1; i++)r = y, d = a.t0 * f * (i % 2), e += r, T.lineTo(e, l - d); for (T.lineTo(e + (a.b2 - a.bs - a.t) * f, l + d), "d0" == a.thread && "d1" == a.shaft && (l += x), T.lineTo(e + (a.b2 - a.t) * f, l + d), T.lineTo(e + (a.l - (a.t + a.b1 + a.bs)) * f, l + d), "d0" == a.head && "d1" == a.shaft && (l -= x), T.lineTo(e + (a.l - (a.t + a.b1)) * f, l + d), e += (a.l - a.t) * f, T.lineTo(e, l + d), p = a.r * f, b = (a.r + a[a.head]) * f, s = u = e, m = c = l - p, h = o(90), g = !0, v = o(90 - a.a), T.arc(s, m, p, h, v, g), w = t(s, m, e, l, o(a.a), g), s = w.x, m = w.y, w = t(s, m, s + a.n * f, m, o(a.a), g), T.lineTo(w.x, w.y), e = s + a.f * f + a.n * f, l = m - a.f * f, w = t(s, m, e, l, o(a.a), g), T.lineTo(w.x, w.y), l = l + a.f * f + a.d0 * f + a.f * f, w = t(s, m, e, l, o(a.a), g), T.lineTo(w.x, w.y), e -= a.f * f, l -= a.f * f, w = t(s, m, e, l, o(a.a), g), T.lineTo(w.x, w.y), e -= a.n * f, w = t(s, m, e, l, o(a.a), g), T.lineTo(w.x, w.y), h = o(90), g = !0, v = o(90 - a.a), T.arc(u, c, b, v, h, !g), e = u, l = c + b, e -= a.b1 * f, T.lineTo(e, l + d), "d0" == a.head && "d1" == a.shaft && (l -= x), T.lineTo(e - a.bs * f, l + d), e -= (a.l - a.b1 - a.b2) * f, T.lineTo(e, l + d), "d0" == a.thread && "d1" == a.shaft && (l += x), T.lineTo(e - a.bs * f, l + d), e -= (a.b2 - a.t) * f, T.lineTo(e, l + d), i = 1; i < 2 * a.tn + 1; i++)r = y, d = a.t0 * f * (i % 2), e -= r, T.lineTo(e, l + d) } var r, d, s, m, u, c, p, b, h, v, g, f, x, w = l() / 25.4; 0 === a.a && (a.l2 = a.l1), a.d0 < a.d1 && (a.d1 = a.d0), x = (a.d0 - a.d1) / 2 * w, a.l2 > (e.width - 200) / w ? (a.l = (e.width - 200) / w, b = !0) : (a.l = a.l2, b = !1), 0 === a.a ? (a.l -= a.n + a.f, h = !0) : h = !1, r = 50, d = 150; var T = e.getContext("2d"); T.clearRect(0, 0, e.width, e.height), T.strokeStyle = "#ffffff", T.lineWidth = 1, T.setLineDash([]), T.beginPath(), i(r, d, a, h), T.closePath(); var y = n(T); T.fillStyle = y, T.fill(), T.stroke(); var k = "#054f79"; b && (T.beginPath(), T.strokeStyle = k, T.lineWidth = 1, r = 50 + a.l * w / 2, d = 150 + x, T.moveTo(r, d), d -= 1, T.lineTo(r, d), r += 20, T.lineTo(r, d), r += a.d1 * w / 2, d += a.d1 * w / 2 + 1, T.lineTo(r, d), r -= a.d1 * w / 2, d += a.d1 * w / 2 + 1, T.lineTo(r, d), r -= 20, T.lineTo(r, d), r += a.d1 * w / 2, d -= a.d1 * w / 2 - 1, T.lineTo(r, d), r -= a.d1 * w / 2, d -= a.d1 * w / 2 - 1, T.lineTo(r, d), T.stroke(), T.fillStyle = k, T.fill(), T.closePath(), T.beginPath(), T.strokeStyle = "white", T.lineWidth = 1, r = 50 + a.l * w / 2 + 20, d = 150 + x, T.moveTo(r, d), r += a.d1 * w / 2, d += a.d1 * w / 2, T.lineTo(r, d), r -= a.d1 * w / 2, d += a.d1 * w / 2, T.lineTo(r, d), r -= 20, T.moveTo(r, d), r += a.d1 * w / 2, d -= a.d1 * w / 2, T.lineTo(r, d), r -= a.d1 * w / 2, d -= a.d1 * w / 2, T.lineTo(r, d), T.stroke(), T.closePath()), T.beginPath(), T.strokeStyle = "rgba(255,255,255,0.3)", T.lineWidth = 1, r = 50, d = 150, m = d + a.d0 * w + 30, T.moveTo(r, m), h ? (s = r + (a.l + a.n + a.f) * w, T.lineTo(s, m)) : (s = r + a.l * w, T.lineTo(s, m)), m -= 5, T.moveTo(r, m), m += 10, T.lineTo(r, m), m -= 10, T.moveTo(s, m), m += 10, T.lineTo(s, m), h || (r += a.l * w, d = d + a.d0 * w + 30, s = u = r, c = d, m = d - (a.d0 + a.r) * w - 30, p = t(s, m, r, d, o(a.a), !0), T.moveTo(p.x, p.y), r += a.n * w, p = t(s, m, r, d, o(a.a), !0), T.lineTo(p.x, p.y), r = u, d = c - 5, p = t(s, m, r, d, o(a.a), !0), T.moveTo(p.x, p.y), r = u, d = c + 5, p = t(s, m, r, d, o(a.a), !0), T.lineTo(p.x, p.y), r = u + a.n * w, d = c - 5, p = t(s, m, r, d, o(a.a), !0), T.moveTo(p.x, p.y), d = c + 5, p = t(s, m, r, d, o(a.a), !0), T.lineTo(p.x, p.y)), T.stroke(), T.closePath(), T.beginPath(), T.strokeStyle = "rgba(255,255,255,0.3)", T.lineWidth = 1, T.setLineDash([4, 4]), r = 50, d = 150, T.moveTo(r, d + a.d0 * w), T.lineTo(r, d + a.d0 * w + 30), h ? (s = r + (a.l + a.n + a.f) * w, T.moveTo(s, d + a.d0 * w), T.lineTo(s, d + a.d0 * w + 30)) : (s = r + a.l * w, T.moveTo(s, d + a.d0 * w), T.lineTo(s, d + a.d0 * w + 50), r += a.l * w, d += a.d0 * w, s = u = r, c = d, m = d - (a.d0 + a.r) * w, v = o(90), f = !0, g = o(90 - a.a), T.arc(s, m, (a.d0 + a.r) * w + 50, v, g, f), p = t(s, m, r, d, o(a.a), !0), T.moveTo(p.x, p.y), p = t(s, m, r, d + 50, o(a.a), !0), T.lineTo(p.x, p.y), p = t(s, m, r + a.n * w, d + 30, o(a.a), !0), T.moveTo(p.x, p.y), p = t(s, m, r + a.n * w, d, o(a.a), !0), T.lineTo(p.x, p.y)), T.stroke(), T.closePath() } function n(e) { var l, a = document.createElement("canvas"), n = 5, t = 5; for (document.body.appendChild(a), a.width = 20, a.height = 20, l = a.getContext("2d"), l.beginPath(), l.strokeStyle = "rgba(255,255,255,0.2)"; t < 2 * a.width;)l.moveTo(t, 0), l.lineTo(0, t), t += n; l.stroke(), l.closePath(); var o = e.createPattern(a, "repeat"); return document.body.removeChild(a), o } function t(e, l, a, n, t, o) { var i = { x: null, y: null }, r = a - e, d = n - l, s = Math.cos(t), m = Math.sin(t); return o ? (i.x = r * s + d * m, i.y = d * s + r * m * -1) : (i.x = r * s - d * m, i.y = d * s + r * m), i.x += e, i.y += l, i } function o(e) { return e * (Math.PI / 180) } e.spoke = { l: null, l1: 210, l2: 200, n: 10, d0: 4, d1: 4, a: 45, t: 20, tn: 16, t0: .6, thread: "d1", shaft: "d1", head: "d0", b1: 20, b2: 28, bs: 1, r: 1, f: 1.5, nut: 7.5 }, e.dir = { d0_list: [{ label: "2,5 mm", value: 2.5 }, { label: "3,0 mm", value: 3 }, { label: "3,5 mm", value: 3.5 }, { label: "4,0 mm", value: 4 }, { label: "4,5 mm", value: 4.5 }, { label: "5,0 mm", value: 5 }, { label: "5,25mm", value: 5.25 }], d1_list: [], nut_list: [], nutLabel: e.nutLabel || "Nipple" }; var i = { 2.5: [{ label: "2,5 mm", value: 2.5 }], 3: [{ label: "3,0 mm", value: 3 }], 3.5: [{ label: "3,5 mm", value: 3.5 }, { label: "3,0 mm", value: 3 }], 4: [{ label: "4,0 mm", value: 4 }, { label: "3,5 mm", value: 3.5 }, { label: "3,0 mm", value: 3 }], 4.5: [{ label: "4,5 mm", value: 4.5 }, { label: "4,0 mm", value: 4 }, { label: "3,5 mm", value: 3.5 }], 5: [{ label: "4,5 mm", value: 4.5 }, { label: "4,0 mm", value: 4 }, { label: "3,5 mm", value: 3.5 }], 5.25: [{ label: "4,5 mm", value: 4.5 }, { label: "4,0 mm", value: 4 }, { label: "3,5 mm", value: 3.5 }] }, r = { 2.5: [{ label: "6,5 mm", value: 6.5 }, { label: "6,0 mm", value: 6 }, { label: "5,3 mm", value: 5.3 }, { label: "5,0 mm", value: 5 }], 3: [{ label: "7,0 mm", value: 7 }, { label: "6,5 mm", value: 6.5 }, { label: "6,0 mm", value: 6 }], 3.5: [{ label: "7,5 mm", value: 7.5 }, { label: "7,0 mm", value: 7 }, { label: "6,5 mm", value: 6.5 }, { label: "6,0 mm", value: 6 }], 4: [{ label: "7,5 mm", value: 7.5 }, { label: "7,0 mm", value: 7 }], 4.5: [{ label: "7,5 mm", value: 7.5 }], 5: [{ label: "7,5 mm", value: 7.5 }], 5.25: [{ label: "7,5 mm", value: 7.5 }] }; e.d_change = function () { var l = i[e.spoke.d0.toString()]; e.dir.d1_list = l; var a = e.dir.d1_list.filter(function (l) { return e.spoke.d1 == l.value }); a.length || (e.spoke.d1 = e.dir.d1_list[0].value); var n = r[e.spoke.d1.toString()]; e.dir.nut_list = n; var t = e.dir.nut_list.filter(function (l) { return e.spoke.nut == l.value }); t.length || (e.spoke.nut = e.dir.nut_list[0].value), e.draw() }, e.draw = function () { a(e.canvas, e.spoke) }; var d = i[e.spoke.d0.toString()]; e.dir.d1_list = d; var s = r[e.spoke.d1.toString()]; e.dir.nut_list = s }] } }]), function () { "use strict"; angular.module("app", ["app-module"]); angular.element(document).ready(function () { angular.bootstrap(document, ["app"]) }) }();